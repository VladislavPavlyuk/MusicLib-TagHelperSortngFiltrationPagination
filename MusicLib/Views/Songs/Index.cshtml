@using MusicLib.Models
@model MusicLib.Models.IndexViewModel 

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>List of Songs</h2>

<p>
    <a asp-action="Create">Add a new Song</a>    
</p>
<form method="get">
    <div>
        <label>Artist: </label>
        <select name="artist" asp-items="Model.FilterViewModel.Artists"></select>

        <label>Genre: </label>
        <select name="genre" asp-items="Model.FilterViewModel.Genres"></select>

        <input type="submit" value="Filter" />
    </div>
</form>

<table class="table-condensed" style="width:100%">
    <thead>
        <tr>
            <th>
                <sort-header 
                action="Index" 
                up="@Model.SortViewModel.Up"
                current="@Model.SortViewModel.Current" 
                property="@Model.SortViewModel.SongTitleSort">Song
                </sort-header>
            </th>
            <th>                
                <sort-header 
                action="Index" 
                up="@Model.SortViewModel.Up"
                current="@Model.SortViewModel.Current"
                property="@Model.SortViewModel.SongReleaseDateSort">Release Date
                </sort-header>
            </th>
            <th>
                <sort-header 
                action="Index" 
                up="@Model.SortViewModel.Up"
                current="@Model.SortViewModel.Current"
                property="@Model.SortViewModel.GenreTitleSort">Genre
                </sort-header>
            </th>
            <th>
                <sort-header 
                action="Index"
                up="@Model.SortViewModel.Up"
                current="@Model.SortViewModel.Current"
                property="@Model.SortViewModel.ArtistNameSort">Artist
                </sort-header>
            </th>
            <th>Youtube</th>
        </tr>
    </thead>
    <tbody>
@if (Model.Songs != null)
{    
    @foreach (var item in Model.Songs)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Release)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Artist)
        </td>
            <td>
                <button type="button" class="btn btn-outline-success"
                        onclick="window.location.href='@item.YoutubeLink)'">
                    Play</button>
            
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Video)
        </td>

        <td>
                <a type="button" class="btn btn-outline-primary" asp-action="Watch" asp-controller="Videos" asp-route-id="@item.VideoId">MP4</a>  

            
                <a type="button" class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id">Detailes</a>

                @if (Context.Session.GetInt32("Role") == 1)
                {
                    <a> </a>
                    <a type="button" class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a> </a>
                    <a type="button" class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
        </td>
    </tr>
    }
}
else
{
    <tr>No songs available.</tr>
}
    </tbody>
</table>
<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-artist="@(Model.FilterViewModel.SelectedArtist)"
           page-url-genre="@(Model.FilterViewModel.SelectedGenre)"
           page-url-sortorder="@(Model.SortViewModel.Current)"></page-link>
